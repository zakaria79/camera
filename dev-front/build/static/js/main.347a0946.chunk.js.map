{"version":3,"sources":["components/app-bar/AppBar.js","components/drawer-list-left/DrawerListLeft.js","components/drawer-list-right/DrawerListRight.js","components/drawer/Drawer.js","components/expressions-recognition/ExpressionsRecognition.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","props","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","toggleDrawer","Typography","variant","Button","list","width","DrawerListLeft","side","id","role","onKeyDown","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","DrawerListRight","key","SwipeableTemporaryDrawer","SwipeableDrawer","open","left","onClose","onOpen","anchor","right","ExpressionsRecognition","startVideo","window","navigator","getUserMedia","video","stream","state","srcObject","err","console","log","document","getElementById","this","setState","Promise","all","faceapi","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","addEventListener","canvas","createCanvasFromMedia","append","displaySize","height","matchDimensions","setInterval","a","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","detections","resizedDetections","resizeResults","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions","style","margin","padding","display","justifyContent","autoPlay","muded","Component","Home","App","React","useState","drawerOpen","setDrawerOpen","event","type","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.347a0946.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={props.toggleDrawer('left', true)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Camera App\n          </Typography>\n          <Button color=\"inherit\" onClick={props.toggleDrawer('right', true)}>\n            <MoreVertIcon />\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport './DrawerListLeft.css';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nconst DrawerListLeft = props => {\n  const classes = useStyles();\n  const { side, toggleDrawer } = props;\n  return (\n    <div\n      id=\"DrawerListLeft\"\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}>\n      <List>\n        <Link to=\"/\">\n          <ListItem button>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Accueil\" />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link to=\"/expressions-recognition\">\n          <ListItem button>\n            <ListItemIcon>\n              <VideocamIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reconnaissance des Ã©motions\" />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n};\n\nexport default DrawerListLeft;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nconst DrawerListRight = props => {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={props.toggleDrawer(props.side, false)}\n      onKeyDown={props.toggleDrawer(props.side, false)}>\n      <List>\n        <ListItem button key=\"Inbox\">\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Inbox\" />\n        </ListItem>\n        <ListItem button key=\"Starred\">\n          <ListItemIcon>\n            <MailIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Starred\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"All mail\">\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"All mail\" />\n        </ListItem>\n        <ListItem button key=\"Trash\">\n          <ListItemIcon>\n            <MailIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n        <ListItem button key=\"Spam\">\n          <ListItemIcon>\n            <MailIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Spam narusite\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default DrawerListRight;\n","import React from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport DrawerListLeft from './../drawer-list-left/DrawerListLeft';\nimport DrawerListRight from './../drawer-list-right/DrawerListRight';\n\nexport default function SwipeableTemporaryDrawer(props) {\n  return (\n    <div>\n      <SwipeableDrawer\n        open={props.open.left}\n        onClose={props.toggleDrawer('left', false)}\n        onOpen={props.toggleDrawer('left', true)}>\n        <DrawerListLeft side=\"left\" toggleDrawer={props.toggleDrawer} />\n      </SwipeableDrawer>\n      <SwipeableDrawer\n        anchor=\"right\"\n        open={props.open.right}\n        onClose={props.toggleDrawer('right', false)}\n        onOpen={props.toggleDrawer('right', true)}>\n        <DrawerListRight side=\"left\" toggleDrawer={props.toggleDrawer} />\n      </SwipeableDrawer>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './ExpressionsRecognition.css';\n\nclass ExpressionsRecognition extends Component {\n  constructor() {\n    super();\n    this.state = { video: null };\n  }\n\n  componentDidMount() {\n    const video = document.getElementById('video');\n    this.setState({ ...this.state, video });\n\n    Promise.all([\n      window.faceapi.nets.tinyFaceDetector.loadFromUri('/weights'),\n      window.faceapi.nets.faceLandmark68Net.loadFromUri('/weights'),\n      window.faceapi.nets.faceRecognitionNet.loadFromUri('/weights'),\n      window.faceapi.nets.faceExpressionNet.loadFromUri('/weights'),\n    ]).then(this.startVideo());\n\n    video.addEventListener('play', () => {\n      const canvas = window.faceapi.createCanvasFromMedia(video);\n      document.getElementById('camera').append(canvas);\n      const displaySize = {\n        width: video.width,\n        height: video.height,\n      };\n      window.faceapi.matchDimensions(canvas, displaySize);\n      window.setInterval(async () => {\n        const detections = await window.faceapi\n          .detectAllFaces(video, new window.faceapi.TinyFaceDetectorOptions())\n          .withFaceLandmarks()\n          .withFaceExpressions();\n        const resizedDetections = window.faceapi.resizeResults(\n          detections,\n          displaySize,\n        );\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        window.faceapi.draw.drawDetections(canvas, resizedDetections);\n        window.faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n        window.faceapi.draw.drawFaceExpressions(canvas, resizedDetections);\n      }, 1000);\n    });\n  }\n\n  startVideo = () => {\n    window.navigator.getUserMedia(\n      {\n        video: {},\n      },\n      stream => (this.state.video.srcObject = stream),\n      err => console.log(err),\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"ExpressionsRecognition\">\n        <h1>Reconnaissance des Ã©motions</h1>\n        <div\n          id=\"camera\"\n          style={{\n            margin: '0',\n            padding: '0',\n            width: '100vw',\n            height: '100vh',\n            display: 'flex',\n            justifyContent: 'center',\n          }}>\n          <video\n            id=\"video\"\n            width={700}\n            height={700}\n            autoPlay\n            muded=\"true\"></video>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExpressionsRecognition;\n","import React from 'react';\n\nconst Home = props => {\n  return (\n    <div className=\"Home\">\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppBar from './components/app-bar/AppBar';\nimport Drawer from './components/drawer/Drawer';\nimport ExpressionsRecognition from './components/expressions-recognition/ExpressionsRecognition';\n\nimport Home from './components/home/Home';\nimport './App.css';\n\nfunction App() {\n  const [drawerOpen, setDrawerOpen] = React.useState({\n    left: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setDrawerOpen({ ...drawerOpen, [side]: open });\n  };\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar toggleDrawer={toggleDrawer} />\n        <Drawer toggleDrawer={toggleDrawer} open={drawerOpen} />\n        <Switch>\n          <Route\n            path=\"/expressions-recognition\"\n            component={ExpressionsRecognition}\n          />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'face-api.js/dist/face-api';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}